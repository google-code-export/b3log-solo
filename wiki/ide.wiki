#summary IDE

===IDE===
[http://b3log-solo.googlecode.com B3log Solo] 是使用 [http://maven.apache.org Maven2] 进行的项目构建，所以并不依赖于任何一款 Java IDE，只要支持 [http://maven.apache.org Maven] 的 IDE 都可以进行开发。

（<font color='green'>但折腾 eclipse 开发环境比较伤血，慎行！！！！</font>）
====`NetBeans`_（<font color='red'>推荐的</font>）_====
 * `NetBeans`:  http://netbeans.org/downloads/index.html
=====配置=====
 # 工具 -> 选项 -> 其他 -> Maven -> 外部&Maven主页 -> 浏览，把 Maven 的路径加上
 # 用 SVN 把项目迁出 http://b3log-solo.googlecode.com/svn/trunk/b3log-solo
 # 在根项目上进行构建（mvn install）
 # 在 IDE 中打开项目，并展开（打开）所有模块项目。找到 B3log Solo (GAE) 项目，右键->定制-> gae:unpack（_在每次 GAE SDK 升级后都需要运行此命令_）<br/><img src="http://b3log-solo.googlecode.com/svn/wiki/src/images/gae-unpack.jpg"/>
 # 运行项目。右键项目，定制-> gae:run
 # 部署项目，定制-> gae:deploy，按提示在控制台输入账号密码即可
====`Eclipse`====
 * Eclipse : http://www.eclipse.org
=====配置=====
 # 安装 Maven 的插件：The Maven Integration for Eclipse
 # Window -> Preferences -> Maven -> installations -> Add，把 Maven 的路径添加上
 # 用 SVN 把项目迁出 http://b3log-solo.googlecode.com/svn/trunk/b3log-solo
 # Win+R->cmd 进入命令行，进入项目所在目录（e.g: D: 回车；cd foldername 回车  etc...），你如果成功进入会发现 pom.xml，运行命令 mvn eclipse:eclipse，静静等待，Build 成功即可
 # 在 Eclipse 中右键项目，选择刷新（refresh），可以很明显的看到目录结构的变化。这是因为上一步生成了 eclipse 的 .project、.classpath 配置文件，现在可以识别 maven 项目了
 # 更新 GAE 相关资源。右键 solo-gae 项目，run as maven build... --> Goals: gae:unpack
 # 运行项目。右键 solo-gae 项目，run as maven build... --> Goals: gae:run
 # 部署项目，run as maven build... --> Goals: gae:deploy